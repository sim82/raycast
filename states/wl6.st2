
spawn brown {
    directional 108, stand, ammo
    directional 112, path, ammo
    directional 144, stand, ammo
    directional 148, path, ammo
    directional 180, stand, ammo
    directional 184, path, ammo
}

states brown {
stand:
    state Spr::BROWN_S_1, true, 0, ThinkStand, None, stand
path:
    state Spr::BROWN_W1_1, true, 20, ThinkPath, None, next
    state Spr::BROWN_W1_1, true, 5, None, None, next
    state Spr::BROWN_W2_1, true, 15, ThinkPath, None, next
    state Spr::BROWN_W3_1, true, 20, ThinkPath, None, next
    state Spr::BROWN_W3_1, true, 5, None, None, next
    state Spr::BROWN_W4_1, true, 15, ThinkPath, None, path
pain1:
    state Spr::BROWN_PAIN_1, false, 10, None, None, chase
pain2:
    state Spr::BROWN_PAIN_2, false, 10, None, None, chase
sight:
    state Spr::BROWN_W1_1, true, 0, None, SightBrown, next
chase:
    state Spr::BROWN_W1_1, true, 10, ThinkChase, None, next
    state Spr::BROWN_W1_1, true, 3, None, None, next
    state Spr::BROWN_W2_1, true, 8, ThinkChase, None, next
    state Spr::BROWN_W3_1, true, 10, ThinkChase, None, next
    state Spr::BROWN_W3_1, true, 3, None, None, next
    state Spr::BROWN_W4_1, true, 8, ThinkChase, None, chase
die:
    state Spr::BROWN_DIE_1, false, 15, None, DeathScreamBrown, next
    state Spr::BROWN_DIE_2, false, 15, None, ActionDie, next
    state Spr::BROWN_DIE_3, false, 15, None, None, next
dead:
    state Spr::BROWN_DEAD, false, 0, None, None, dead
shoot:
    state Spr::BROWN_SHOOT1, false, 20, None, None, next
    state Spr::BROWN_SHOOT2, false, 20, None, ActionShoot, next
    state Spr::BROWN_SHOOT3, false, 20, None, None, chase
}


spawn blue {
    directional 126, stand, ammo
    directional 130, path, ammo
    directional 162, stand, ammo
    directional 166, path, ammo
    directional 198, stand, ammo
    directional 202, path, ammo
}

states blue {
stand:
    state Spr::BLUE_S_1, true, 0, ThinkStand, None, stand
path:
    state Spr::BLUE_W1_1, true, 20, ThinkPath, None, next
    state Spr::BLUE_W1_1, true, 5, None, None, next
    state Spr::BLUE_W2_1, true, 15, ThinkPath, None, next
    state Spr::BLUE_W3_1, true, 20, ThinkPath, None, next
    state Spr::BLUE_W3_1, true, 5, None, None, next
    state Spr::BLUE_W4_1, true, 15, ThinkPath, None, path
pain1:
    state Spr::BLUE_PAIN_1, false, 10, None, None, chase
pain2:
    state Spr::BLUE_PAIN_2, false, 10, None, None, chase
sight:
    state Spr::BLUE_W1_1, true, 0, None, SightBlue, next
chase:
    state Spr::BLUE_W1_1, true, 10, ThinkChase, None, next
    state Spr::BLUE_W1_1, true, 3, None, None, next
    state Spr::BLUE_W2_1, true, 8, ThinkChase, None, next
    state Spr::BLUE_W3_1, true, 10, ThinkChase, None, next
    state Spr::BLUE_W3_1, true, 3, None, None, next
    state Spr::BLUE_W4_1, true, 8, ThinkChase, None, chase
die:
    state Spr::BLUE_DIE_1, false, 15, None, DeathScreamBlue, next
    state Spr::BLUE_DIE_2, false, 15, None, None, next
    state Spr::BLUE_DIE_3, false, 15, None, ActionDie, next
dead:
    state Spr::BLUE_DEAD, false, 0, None, None, dead

shoot:
    state Spr::BLUE_SHOOT1, false, 20, None, None, next
    state Spr::BLUE_SHOOT2, false, 10, None, ActionShoot, next
    state Spr::BLUE_SHOOT3, false, 10, None, None, next
    state Spr::BLUE_SHOOT2, false, 10, None, ActionShoot, next
    state Spr::BLUE_SHOOT3, false, 10, None, None, next
    state Spr::BLUE_SHOOT2, false, 10, None, ActionShoot, next
    state Spr::BLUE_SHOOT3, false, 10, None, None, next
    state Spr::BLUE_SHOOT2, false, 10, None, ActionShoot, next
    state Spr::BLUE_SHOOT3, false, 10, None, None, chase
}


spawn white {
    directional 116, stand, ammo
    directional 120, path, ammo
    directional 152, stand, ammo
    directional 156, path, ammo
    directional 188, stand, ammo
    directional 192, path, ammo
}

states white {
stand:
    state Spr::WHITE_S_1, true, 0, ThinkStand, None, stand
path:
    state Spr::WHITE_W1_1, true, 20, ThinkPath, None, next
    state Spr::WHITE_W1_1, true, 5, None, None, next
    state Spr::WHITE_W2_1, true, 15, ThinkPath, None, next
    state Spr::WHITE_W3_1, true, 20, ThinkPath, None, next
    state Spr::WHITE_W3_1, true, 5, None, None, next
    state Spr::WHITE_W4_1, true, 15, ThinkPath, None, path
pain1:
    state Spr::WHITE_PAIN_1, false, 10, None, None, chase
pain2:
    state Spr::WHITE_PAIN_2, false, 10, None, None, chase
sight:
    state Spr::WHITE_W1_1, true, 0, None, SightWhite, next
chase:
    state Spr::WHITE_W1_1, true, 10, ThinkChase, None, next
    state Spr::WHITE_W1_1, true, 3, None, None, next
    state Spr::WHITE_W2_1, true, 8, ThinkChase, None, next
    state Spr::WHITE_W3_1, true, 10, ThinkChase, None, next
    state Spr::WHITE_W3_1, true, 3, None, None, next
    state Spr::WHITE_W4_1, true, 8, ThinkChase, None, chase
die:
    state Spr::WHITE_DIE_1, false, 15, None, DeathScreamWhite, next
    state Spr::WHITE_DIE_2, false, 15, None, None, next
    state Spr::WHITE_DIE_3, false, 15, None, None, next
    state Spr::WHITE_DIE_4, false, 15, None, ActionDie, next
dead:
    state Spr::WHITE_DEAD, false, 0, None, None, dead
shoot:
    state Spr::WHITE_SHOOT1, false, 20, None, None, next
    state Spr::WHITE_SHOOT2, false, 20, None, ActionShoot, next
    state Spr::WHITE_SHOOT3, false, 20, None, None, chase
}


spawn rotten {
    directional 216, stand, ammo
    directional 220, path, ammo
    directional 234, stand, ammo
    directional 238, path, ammo
    directional 252, stand, ammo
    directional 256, path, ammo
}


states rotten {
stand:
    state Spr::ROTTEN_S_1, true, 0, ThinkStand, None, stand
path:
    state Spr::ROTTEN_W1_1, true, 20, ThinkPath, None, next
    state Spr::ROTTEN_W1_1, true, 5, None, None, next
    state Spr::ROTTEN_W2_1, true, 15, ThinkPath, None, next
    state Spr::ROTTEN_W3_1, true, 20, ThinkPath, None, next
    state Spr::ROTTEN_W3_1, true, 5, None, None, next
    state Spr::ROTTEN_W4_1, true, 15, ThinkPath, None, path
pain1:
    state Spr::ROTTEN_PAIN_1, false, 10, None, None, chase
pain2:
    state Spr::ROTTEN_PAIN_2, false, 10, None, None, chase
sight:
chase:
    state Spr::ROTTEN_W1_1, true, 10, ThinkChase, None, next
    state Spr::ROTTEN_W1_1, true, 3, None, None, next
    state Spr::ROTTEN_W2_1, true, 8, ThinkChase, None, next
    state Spr::ROTTEN_W3_1, true, 10, ThinkChase, None, next
    state Spr::ROTTEN_W3_1, true, 3, None, None, next
    state Spr::ROTTEN_W4_1, true, 8, ThinkChase, None, chase
die:
    state Spr::ROTTEN_DIE_1, false, 15, None, DeathScreamRotten, next
    state Spr::ROTTEN_DIE_2, false, 15, None, None, next
    state Spr::ROTTEN_DIE_3, false, 15, None, None, next
    state Spr::ROTTEN_DIE_4, false, 15, None, ActionDie, next
dead:
    state Spr::ROTTEN_DEAD, false, 0, None, None, dead

shoot:
    state Spr::ROTTEN_SHOOT1, false, 20, None, ActionShoot, next
    state Spr::ROTTEN_SHOOT2, false, 20, None, None, next
    state Spr::ROTTEN_SHOOT3, false, 20, None, ActionShoot, next
    state Spr::ROTTEN_SHOOT4, false, 20, None, None, chase
}


spawn furry {
    directional 134, stand, none
    directional 138, path, none
    directional 170, stand, none
    directional 174, path, none
    directional 206, stand, none
    directional 210, path, none
}

states furry {
stand:
    state Spr::FURRY_W1_1, true, 20, ThinkPath, None, stand
path:
    state Spr::FURRY_W1_1, true, 20, ThinkPath, None, next
    state Spr::FURRY_W1_1, true, 5, None, None, next
    state Spr::FURRY_W2_1, true, 15, ThinkPath, None, next
    state Spr::FURRY_W3_1, true, 20, ThinkPath, None, next
    state Spr::FURRY_W3_1, true, 5, None, None, next
    state Spr::FURRY_W4_1, true, 15, ThinkPath, None, path
pain1:
    state Spr::FURRY_DIE_1, false, 10, None, None, chase
pain2:
    state Spr::FURRY_DIE_1, false, 10, None, None, chase
chase:
sight:
    state Spr::FURRY_W1_1, true, 10, ThinkDogChase, None, next
    state Spr::FURRY_W1_1, true, 3, None, None, next
    state Spr::FURRY_W2_1, true, 8, ThinkDogChase, None, next
    state Spr::FURRY_W3_1, true, 10, ThinkDogChase, None, next
    state Spr::FURRY_W3_1, true, 3, None, None, next
    state Spr::FURRY_W4_1, true, 8, ThinkDogChase, None, chase
die:
    state Spr::FURRY_DIE_1, false, 15, None, DeathScreamFurry, next
    state Spr::FURRY_DIE_2, false, 15, None, None, next
    state Spr::FURRY_DIE_3, false, 15, None, ActionDie, next
dead:
    state Spr::FURRY_DEAD, false, 0, None, None, dead
jump:
    state Spr::FURRY_JUMP1, false, 10, None, None, next
    state Spr::FURRY_JUMP2, false, 10, None, ActionBite, next
    state Spr::FURRY_JUMP3, false, 10, None, None, next
    state Spr::FURRY_JUMP1, false, 10, None, None, next
    state Spr::FURRY_W1_1, false, 10, None, None, chase
}


spawn hans {
    undirectional 214, stand, silver_key
}

states hans {
stand:
    state Spr::BOSS_W1, false, 0, ThinkStand, None, stand
path:
    state Spr::BOSS_W1, false, 20, ThinkPath, None, next
    state Spr::BOSS_W1, false, 5, None, None, next
    state Spr::BOSS_W2, false, 15, ThinkPath, None, next
    state Spr::BOSS_W3, false, 20, ThinkPath, None, next
    state Spr::BOSS_W3, false, 5, None, None, next
    state Spr::BOSS_W4, false, 15, ThinkPath, None, path
pain1:
    state Spr::BOSS_DIE1, false, 10, None, None, chase
pain2:
    state Spr::BOSS_DIE1, false, 10, None, None, chase
sight:
chase:
    state Spr::BOSS_W1, false, 10, ThinkChase, None, next
    state Spr::BOSS_W1, false, 3, None, None, next
    state Spr::BOSS_W2, false, 8, ThinkChase, None, next
    state Spr::BOSS_W3, false, 10, ThinkChase, None, next
    state Spr::BOSS_W3, false, 3, None, None, next
    state Spr::BOSS_W4, false, 8, ThinkChase, None, chase
die:
    state Spr::BOSS_DIE1, false, 15, None, None, next
    state Spr::BOSS_DIE2, false, 15, None, ActionDie, next
    state Spr::BOSS_DIE3, false, 15, None, None, dead
dead:
    state Spr::BOSS_DEAD, false, 0, None, None, dead
shoot:
    state Spr::BOSS_SHOOT1, false, 20, None, None, next
    state Spr::BOSS_SHOOT2, false, 20, None, ActionShoot, next
    state Spr::BOSS_SHOOT3, false, 20, None, None, chase
}

spawn good_dr {
    undirectional 196, stand, None
}

states good_dr {
stand:
    state Spr::GOOD_DR_W1, false, 0, ThinkStand, None, stand
path:
    state Spr::GOOD_DR_W1, false, 20, ThinkPath, None, next
    state Spr::GOOD_DR_W1, false, 5, None, None, next
    state Spr::GOOD_DR_W2, false, 15, ThinkPath, None, next
    state Spr::GOOD_DR_W3, false, 20, ThinkPath, None, next
    state Spr::GOOD_DR_W3, false, 5, None, None, next
    state Spr::GOOD_DR_W4, false, 15, ThinkPath, None, path
pain1:
    state Spr::GOOD_DR_W1, false, 10, None, None, chase
pain2:
    state Spr::GOOD_DR_W1, false, 10, None, None, chase
sight:
chase:
    state Spr::GOOD_DR_W1, false, 10, ThinkChase, None, next
    state Spr::GOOD_DR_W1, false, 3, None, None, next
    state Spr::GOOD_DR_W2, false, 8, ThinkChase, None, next
    state Spr::GOOD_DR_W3, false, 10, ThinkChase, None, next
    state Spr::GOOD_DR_W3, false, 3, None, None, next
    state Spr::GOOD_DR_W4, false, 8, ThinkChase, None, chase
die:
    state Spr::GOOD_DR_DIE1, false, 15, None, None, next
    state Spr::GOOD_DR_DIE2, false, 15, None, ActionDie, next
    state Spr::GOOD_DR_DIE3, false, 15, None, None, dead
dead:
    state Spr::GOOD_DR_DEAD, false, 0, None, None, dead
shoot:
    state Spr::GOOD_DR_SHOOT1, false, 20, None, ActionShoot, next
    state Spr::GOOD_DR_SHOOT2, false, 20, None, None, chase
}


spawn grofaz {
    undirectional 224, chase, None
}

states grofaz {
stand:
    state Spr::GROFAZ_W1, false, 0, ThinkStand, None, stand
path:
    state Spr::GROFAZ_W1, false, 20, ThinkPath, None, next
    state Spr::GROFAZ_W1, false, 5, None, None, next
    state Spr::GROFAZ_W2, false, 15, ThinkPath, None, next
    state Spr::GROFAZ_W3, false, 20, ThinkPath, None, next
    state Spr::GROFAZ_W3, false, 5, None, None, next
    state Spr::GROFAZ_W4, false, 15, ThinkPath, None, path
pain1:
    state Spr::GROFAZ_W1, false, 10, None, None, chase
pain2:
    state Spr::GROFAZ_W1, false, 10, None, None, chase
sight:
chase:
    state Spr::GROFAZ_W1, false, 10, ThinkChase, None, next
    state Spr::GROFAZ_W1, false, 3, None, None, next
    state Spr::GROFAZ_W2, false, 8, ThinkChase, None, next
    state Spr::GROFAZ_W3, false, 10, ThinkChase, None, next
    state Spr::GROFAZ_W3, false, 3, None, None, next
    state Spr::GROFAZ_W4, false, 8, ThinkChase, None, chase
die:
    state Spr::GROFAZ_W1, false, 0, None, DeathScreamGrofazTalk, next
    state Spr::GROFAZ_W1, false, 90, None, None, next
    state Spr::GROFAZ_DIE1, false, 15, None, DeathScreamGrofaz, next
    state Spr::GROFAZ_DIE2, false, 15, None, None, next
    state Spr::GROFAZ_DIE3, false, 15, None, None, next
    state Spr::GROFAZ_DIE4, false, 15, None, None, next
    state Spr::GROFAZ_DIE5, false, 15, None, None, next
    state Spr::GROFAZ_DIE6, false, 15, None, ActionDie, next
    state Spr::GROFAZ_DIE7, false, 15, None, None, next
dead:
    state Spr::GROFAZ_DEAD, false, 0, None, None, dead
shoot:
    state Spr::GROFAZ_SHOOT1, false, 20, None, None, next
    state Spr::GROFAZ_SHOOT2, false, 20, None, ActionShoot, next
    state Spr::GROFAZ_SHOOT3, false, 20, None, None, chase
}


spawn mecha {
    undirectional 178, stand, grofaz
}

states mecha {
stand:
    state Spr::MECHA_W1, false, 0, ThinkStand, None, stand
path:
    state Spr::MECHA_W1, false, 20, ThinkPath, None, next
    state Spr::MECHA_W1, false, 5, None, None, next
    state Spr::MECHA_W2, false, 15, ThinkPath, None, next
    state Spr::MECHA_W3, false, 20, ThinkPath, None, next
    state Spr::MECHA_W3, false, 5, None, None, next
    state Spr::MECHA_W4, false, 15, ThinkPath, None, path
pain1:
    state Spr::MECHA_DIE1, false, 10, None, None, chase
pain2:
    state Spr::MECHA_DIE1, false, 10, None, None, chase
sight:
    state Spr::MECHA_W1, false, 0, None, SightMecha, next
chase:
    state Spr::MECHA_W1, false, 10, ThinkChase, None, next
    state Spr::MECHA_W1, false, 3, None, None, next
    state Spr::MECHA_W2, false, 8, ThinkChase, None, next
    state Spr::MECHA_W3, false, 10, ThinkChase, None, next
    state Spr::MECHA_W3, false, 3, None, None, next
    state Spr::MECHA_W4, false, 8, ThinkChase, None, chase
die:
    state Spr::MECHA_DIE1, false, 15, None, DeathScreamMecha, next
    state Spr::MECHA_DIE2, false, 15, None, None, next
    state Spr::MECHA_DIE3, false, 15, None, ActionDie, next
    state Spr::MECHA_DIE3, false, 0, None, None, next
dead:
    state Spr::MECHA_DEAD, false, 0, None, None, dead
shoot:
    state Spr::MECHA_SHOOT1, false, 20, None, None, next
    state Spr::MECHA_SHOOT2, false, 20, None, ActionShoot, next
    state Spr::MECHA_SHOOT3, false, 20, None, None, chase
} 

spawn alp {
    undirectional 160, stand, None
}

states alp {
stand:
    state Spr::ALP_W1, false, 0, ThinkStand, None, stand
path:
    state Spr::ALP_W1, false, 20, ThinkPath, None, next
    state Spr::ALP_W1, false, 5, None, None, next
    state Spr::ALP_W2, false, 15, ThinkPath, None, next
    state Spr::ALP_W3, false, 20, ThinkPath, None, next
    state Spr::ALP_W3, false, 5, None, None, next
    state Spr::ALP_W4, false, 15, ThinkPath, None, path
pain1:
    state Spr::ALP_DIE1, false, 10, None, None, chase
pain2:
    state Spr::ALP_DIE1, false, 10, None, None, chase
sight:
    state Spr::ALP_W1, false, 0, None, SightAlp, next
chase:
    state Spr::ALP_W1, false, 10, ThinkChase, None, next
    state Spr::ALP_W1, false, 3, None, None, next
    state Spr::ALP_W2, false, 8, ThinkChase, None, next
    state Spr::ALP_W3, false, 10, ThinkChase, None, next
    state Spr::ALP_W3, false, 3, None, None, next
    state Spr::ALP_W4, false, 8, ThinkChase, None, chase
die:
    state Spr::ALP_DIE1, false, 15, None, DeathScreamAlp, next
    state Spr::ALP_DIE2, false, 15, None, None, next
    state Spr::ALP_DIE3, false, 15, None, None, next
    state Spr::ALP_DIE4, false, 15, None, ActionDie, next
    state Spr::ALP_DIE5, false, 15, None, None, next
dead:
    state Spr::ALP_DEAD, false, 0, None, None, dead
shoot:
    state Spr::ALP_W1, false, 20, None, ActionShoot, next
    state Spr::ALP_W1, false, 20, None, None, chase
}


spawn hermann {
    undirectional 215, stand, None
}

states hermann {
stand:
    state Spr::HERMANN_W1, false, 0, ThinkStand, None, stand
path:
    state Spr::HERMANN_W1, false, 20, ThinkPath, None, next
    state Spr::HERMANN_W1, false, 5, None, None, next
    state Spr::HERMANN_W2, false, 15, ThinkPath, None, next
    state Spr::HERMANN_W3, false, 20, ThinkPath, None, next
    state Spr::HERMANN_W3, false, 5, None, None, next
    state Spr::HERMANN_W4, false, 15, ThinkPath, None, path
pain1:
    state Spr::HERMANN_W1, false, 10, None, None, chase
pain2:
    state Spr::HERMANN_W1, false, 10, None, None, chase
sight:
chase:
    state Spr::HERMANN_W1, false, 10, ThinkChase, None, next
    state Spr::HERMANN_W1, false, 3, None, None, next
    state Spr::HERMANN_W2, false, 8, ThinkChase, None, next
    state Spr::HERMANN_W3, false, 10, ThinkChase, None, next
    state Spr::HERMANN_W3, false, 3, None, None, next
    state Spr::HERMANN_W4, false, 8, ThinkChase, None, chase
die:
    state Spr::HERMANN_DIE1, false, 15, None, None, next
    state Spr::HERMANN_DIE2, false, 15, None, ActionDie, next
    state Spr::HERMANN_DIE3, false, 15, None, None, dead
dead:
    state Spr::HERMANN_DEAD, false, 0, None, None, dead
shoot:
    state Spr::HERMANN_SHOOT1, false, 20, None, ActionShoot, next
    state Spr::HERMANN_SHOOT2, false, 20, None, None, chase
}

spawn gretel {
    undirectional 197, stand, None
}

states gretel {
stand:
    state Spr::GRETEL_W1, false, 0, ThinkStand, None, stand
path:
    state Spr::GRETEL_W1, false, 20, ThinkPath, None, next
    state Spr::GRETEL_W1, false, 5, None, None, next
    state Spr::GRETEL_W2, false, 15, ThinkPath, None, next
    state Spr::GRETEL_W3, false, 20, ThinkPath, None, next
    state Spr::GRETEL_W3, false, 5, None, None, next
    state Spr::GRETEL_W4, false, 15, ThinkPath, None, path
pain1:
    state Spr::GRETEL_W1, false, 10, None, None, chase
pain2:
    state Spr::GRETEL_W1, false, 10, None, None, chase
sight:
chase:
    state Spr::GRETEL_W1, false, 10, ThinkChase, None, next
    state Spr::GRETEL_W1, false, 3, None, None, next
    state Spr::GRETEL_W2, false, 8, ThinkChase, None, next
    state Spr::GRETEL_W3, false, 10, ThinkChase, None, next
    state Spr::GRETEL_W3, false, 3, None, None, next
    state Spr::GRETEL_W4, false, 8, ThinkChase, None, chase
die:
    state Spr::GRETEL_DIE1, false, 15, None, None, next
    state Spr::GRETEL_DIE2, false, 15, None, ActionDie, next
    state Spr::GRETEL_DIE3, false, 15, None, None, dead
dead:
    state Spr::GRETEL_DEAD, false, 0, None, None, dead
shoot:
    state Spr::GRETEL_SHOOT1, false, 20, None, ActionShoot, next
    state Spr::GRETEL_SHOOT2, false, 20, None, None, chase
}

spawn fettgeischt {
    undirectional 179, stand, None
}

states fettgeischt {
stand:
    state Spr::FETTGEISCHT_W1, false, 0, ThinkStand, None, stand
path:
    state Spr::FETTGEISCHT_W1, false, 20, ThinkPath, None, next
    state Spr::FETTGEISCHT_W1, false, 5, None, None, next
    state Spr::FETTGEISCHT_W2, false, 15, ThinkPath, None, next
    state Spr::FETTGEISCHT_W3, false, 20, ThinkPath, None, next
    state Spr::FETTGEISCHT_W3, false, 5, None, None, next
    state Spr::FETTGEISCHT_W4, false, 15, ThinkPath, None, path
pain1:
    state Spr::FETTGEISCHT_W1, false, 10, None, None, chase
pain2:
    state Spr::FETTGEISCHT_W1, false, 10, None, None, chase
sight:
chase:
    state Spr::FETTGEISCHT_W1, false, 10, ThinkChase, None, next
    state Spr::FETTGEISCHT_W1, false, 3, None, None, next
    state Spr::FETTGEISCHT_W2, false, 8, ThinkChase, None, next
    state Spr::FETTGEISCHT_W3, false, 10, ThinkChase, None, next
    state Spr::FETTGEISCHT_W3, false, 3, None, None, next
    state Spr::FETTGEISCHT_W4, false, 8, ThinkChase, None, chase
die:
    state Spr::FETTGEISCHT_DIE1, false, 15, None, None, next
    state Spr::FETTGEISCHT_DIE2, false, 15, None, ActionDie, next
    state Spr::FETTGEISCHT_DIE3, false, 15, None, None, dead
dead:
    state Spr::FETTGEISCHT_DEAD, false, 0, None, None, dead
shoot:
    state Spr::FETTGEISCHT_SHOOT1, false, 20, None, None, next
    state Spr::FETTGEISCHT_SHOOT2, false, 20, None, None, next
    state Spr::FETTGEISCHT_SHOOT3, false, 20, None, ActionShoot, next
    state Spr::FETTGEISCHT_SHOOT4, false, 20, None, None, chase
}



states weapon_knife {
lower:
ready:
    state Spr::SPR_KNIFEREADY, false, 0, None, WeaponIdleCheckFire, ready
attack:
    state Spr::SPR_KNIFEATK1, false, 3, None, ActionDie, next
    state Spr::SPR_KNIFEATK2, false, 3, None, None, next
    state Spr::SPR_KNIFEATK3, false, 10, None, None, next
    state Spr::SPR_KNIFEATK4, false, 10, None, None, ready
}

states weapon_gun {
lower:
    state Spr::SPR_PISTOLATK4, false, 10, None, None, next
ready:
    state Spr::SPR_PISTOLREADY, false, 0, None, WeaponIdleCheckFire, ready
attack:
    state Spr::SPR_PISTOLATK1, false, 1, None, WeaponAttackCheckIdle, next
repeat:
    state Spr::SPR_PISTOLATK2, false, 3, None, ActionShootPistol, next
    state Spr::SPR_PISTOLATK3, false, 10, None, None, lower
}

states weapon_machinegun {
lower:
    state Spr::SPR_MACHINEGUNATK4, false, 3, None, None, ready
ready:
    state Spr::SPR_MACHINEGUNREADY, false, 0, None, WeaponIdleCheckFire, ready
attack:
    state Spr::SPR_MACHINEGUNATK1, false, 4, None, WeaponAttackCheckIdle, next
repeat:
    state Spr::SPR_MACHINEGUNATK2, false, 4, None, ActionShootMg, next
    state Spr::SPR_MACHINEGUNATK3, false, 4, None, WeaponAttackCheckIdle, repeat
}


states weapon_chaingun {
lower:
    state Spr::SPR_CHAINATK4, false, 4, None, None, ready
ready:
    state Spr::SPR_CHAINREADY, false, 0, None, WeaponIdleCheckFire, ready
attack:
    state Spr::SPR_CHAINATK1, false, 4, None, WeaponAttackCheckIdle, next
repeat:
    state Spr::SPR_CHAINATK2, false, 4, None, ActionShootChain, next
    state Spr::SPR_CHAINATK3, false, 4, None, ChaingunAttackCheckIdle, repeat
}

states door {
closed:
    state Spr::DEMO, false, 0, CheckOpenDoor , None, closed
opened: 
    state Spr::DEMO, false, 300, CheckCloseDoor , None, blocked
close:
    state Spr::DEMO, false, 64, DecOpen, None, closed
open:
    state Spr::DEMO, false, 64, IncOpen, None, opened
blocked: 
    state Spr::DEMO, false, 0, CheckDoorBlocked, None, blocked
}
function WeaponIdleCheckFire {
// get fire flag
    WeaponOp::TRIGGER trap

    if
        // goto attack state
        @attack gostate
        stop
    then
// 'dynamically' look up ready state Spr::of currently selected weapon // i.e. this is how a weapon change is implemented
    WeaponOp::NEXT_STATE trap
    gostate
}
function WeaponAttackCheckIdle {
    // get ammo depleted flag
    WeaponOp::DEPLETED trap
    if
        // out of ammo. stay in this state (keep weapon raised)
        @attack gostate
        stop
    then
    // get fire flag
    WeaponOp::TRIGGER trap
    not if
        // if fire was released abort and goto lower state
        @lower gostate
        // stop
    then
    // follow through to next (usually this mean fire/repeat)
}

function ChaingunAttackCheckIdle {
    // BUG: need to check if ammo available before extra chaingun shot
    Snd::SHOT_MG WeaponOp::SOUND trap 
    Func::ACTION_SHOOT call 

    // get ammo depleted flag
    WeaponOp::DEPLETED trap
    if
        // out of ammo. stay in this state Spr::(keep weapon raised)
        @attack gostate
        stop
    then
    // get fire flag
    WeaponOp::TRIGGER trap
    not if
        // if fire was released abort and goto lower state
        @lower gostate
    then
    // follow through to next (usually this means fire/repeat)
}
function IncOpen {
    DoorOp::GET_F trap
    // 1024 equals 1/64 in fp16 repr (i.e. open door in 64 steps)
    1024i32 add
    DoorOp::SET_F  trap
}
function DecOpen {
    DoorOp::GET_F  trap
    -1024i32 add
    DoorOp::SET_F  trap
}
function CheckOpenDoor {
    DoorOp::TRIGGER trap
    if
        Snd::DOOR_OPEN DoorOp::SOUND trap
        @open gostate
    then
}
function CheckCloseDoor {
    DoorOp::TRIGGER trap
    if
        @blocked gostate
    then
}
function CheckDoorBlocked {
    DoorOp::BLOCKED trap
    not if 
        Snd::DOOR_CLOSE DoorOp::SOUND  trap
        @close gostate
    then
}
function ThinkStand {
    Func::THINK_STAND call
}
function ThinkPath {
    Func::THINK_PATH call
}
function ThinkChase {
    Func::THINK_CHASE call
}
function ThinkDogChase {
    Func::THINK_DOG_CHASE call
}
function ActionDie {
    Func::ACTION_DIE call
}
function ActionShootPistol {
    Snd::SHOT_PISTOL WeaponOp::SOUND trap
    Func::ACTION_SHOOT call
}
function ActionShootMg {
    Snd::SHOT_MG WeaponOp::SOUND trap
    Func::ACTION_SHOOT call
}
function ActionShootChain {
    Snd::SHOT_CHAIN WeaponOp::SOUND trap
    Func::ACTION_SHOOT call
}
function ActionShoot {
    Func::ACTION_SHOOT call
}
function ActionBite {
    Func::ACTION_BITE call
}
function None {
    stop
}
// NOTE: the enemy play sound trap works different than doors/weapons
// it supports a list of alternatives from which to choose randomly.
function DeathScreamBrown {
    [
        Snd::SCREAM_CHHHA
        Snd::SCREAM_HUUGH
        Snd::SCREAM_UWWWGH
        Snd::SCREAM_AIIII
        Snd::SCREAM_OOHHH
        Snd::SCREAM_AAGH
        Snd::SCREAM_AYYY
    ] EnemyOp::RND_SOUND trap

}
function SightBrown{
    [Snd::HALTSTOP] EnemyOp::RND_SOUND trap
}
function DeathScreamBlue {
    [Snd::SCREAM_MEINLEBEN] EnemyOp::RND_SOUND trap
}
function SightBlue{
    [Snd::GREET_BLUE] EnemyOp::RND_SOUND trap
}
function DeathScreamWhite {
    [Snd::SCREAM_NEINSOWAS] EnemyOp::RND_SOUND trap
}
function SightWhite {
    [Snd::UTT_SPION] EnemyOp::RND_SOUND trap
}
function DeathScreamFurry {
    [Snd::YIFF] EnemyOp::RND_SOUND trap
}
function DeathScreamRotten {
    [Snd::SCREAM_ROTTEN_AAAH] EnemyOp::RND_SOUND trap
}
function DeathScreamMecha {
    [Snd::UTT_SCHEISS] EnemyOp::RND_SOUND trap
}
function SightMecha {
    [Snd::UTT_SCHWEINHUND] EnemyOp::RND_SOUND trap
}
function DeathScreamGrofaz {
    [Snd::GIBB] EnemyOp::RND_SOUND trap
}
function DeathScreamGrofazTalk {
    [Snd::UTT_EVAAUFWIEDERSEHN] EnemyOp::RND_SOUND trap
}
function DeathScreamAlp {
    [Snd::LAUGH_ALP] EnemyOp::RND_SOUND trap
}
function SightAlp {
    [Snd::UTT_RAPUNZ] EnemyOp::RND_SOUND trap
}
enum Func
{
    FUNC_NONE,
    THINK_STAND,
    THINK_PATH,
    THINK_CHASE,
    THINK_DOG_CHASE,
    ACTION_DIE,
    ACTION_SHOOT,
    ACTION_BITE
}
enum EnemyOp 
{
    RND_SOUND
}
enum DoorOp
{
    GET_F,
    SET_F,
    TRIGGER,
    BLOCKED,
    SOUND 
}
enum WeaponOp 
{
    TRIGGER,
    DEPLETED,
    NEXT_STATE,
    UNUSED_3,
    SOUND
}
enum Spr
{
    SPR_NONE,
    DEMO,
    DEATHCAM,
    STAT_0,STAT_1,STAT_2,STAT_3,
    STAT_4,STAT_5,STAT_6,STAT_7,

    STAT_8,STAT_9,STAT_10,STAT_11,
    STAT_12,STAT_13,STAT_14,STAT_15,

    STAT_16,STAT_17,STAT_18,STAT_19,
    STAT_20,STAT_21,STAT_22,STAT_23,

    STAT_24,STAT_25,STAT_26,STAT_27,
    STAT_28,STAT_29,STAT_30,STAT_31,

    STAT_32,STAT_33,STAT_34,STAT_35,
    STAT_36,STAT_37,STAT_38,STAT_39,

    STAT_40,STAT_41,STAT_42,STAT_43,
    STAT_44,STAT_45,STAT_46,STAT_47,


    BROWN_S_1,BROWN_S_2,BROWN_S_3,BROWN_S_4,
    BROWN_S_5,BROWN_S_6,BROWN_S_7,BROWN_S_8,

    BROWN_W1_1,BROWN_W1_2,BROWN_W1_3,BROWN_W1_4,
    BROWN_W1_5,BROWN_W1_6,BROWN_W1_7,BROWN_W1_8,

    BROWN_W2_1,BROWN_W2_2,BROWN_W2_3,BROWN_W2_4,
    BROWN_W2_5,BROWN_W2_6,BROWN_W2_7,BROWN_W2_8,

    BROWN_W3_1,BROWN_W3_2,BROWN_W3_3,BROWN_W3_4,
    BROWN_W3_5,BROWN_W3_6,BROWN_W3_7,BROWN_W3_8,

    BROWN_W4_1,BROWN_W4_2,BROWN_W4_3,BROWN_W4_4,
    BROWN_W4_5,BROWN_W4_6,BROWN_W4_7,BROWN_W4_8,

    BROWN_PAIN_1,BROWN_DIE_1,BROWN_DIE_2,BROWN_DIE_3,
    BROWN_PAIN_2,BROWN_DEAD,

    BROWN_SHOOT1,BROWN_SHOOT2,BROWN_SHOOT3,

    FURRY_W1_1,FURRY_W1_2,FURRY_W1_3,FURRY_W1_4,
    FURRY_W1_5,FURRY_W1_6,FURRY_W1_7,FURRY_W1_8,

    FURRY_W2_1,FURRY_W2_2,FURRY_W2_3,FURRY_W2_4,
    FURRY_W2_5,FURRY_W2_6,FURRY_W2_7,FURRY_W2_8,

    FURRY_W3_1,FURRY_W3_2,FURRY_W3_3,FURRY_W3_4,
    FURRY_W3_5,FURRY_W3_6,FURRY_W3_7,FURRY_W3_8,

    FURRY_W4_1,FURRY_W4_2,FURRY_W4_3,FURRY_W4_4,
    FURRY_W4_5,FURRY_W4_6,FURRY_W4_7,FURRY_W4_8,

    FURRY_DIE_1,FURRY_DIE_2,FURRY_DIE_3,FURRY_DEAD,
    FURRY_JUMP1,FURRY_JUMP2,FURRY_JUMP3,

    BLUE_S_1,BLUE_S_2,BLUE_S_3,BLUE_S_4,
    BLUE_S_5,BLUE_S_6,BLUE_S_7,BLUE_S_8,

    BLUE_W1_1,BLUE_W1_2,BLUE_W1_3,BLUE_W1_4,
    BLUE_W1_5,BLUE_W1_6,BLUE_W1_7,BLUE_W1_8,

    BLUE_W2_1,BLUE_W2_2,BLUE_W2_3,BLUE_W2_4,
    BLUE_W2_5,BLUE_W2_6,BLUE_W2_7,BLUE_W2_8,

    BLUE_W3_1,BLUE_W3_2,BLUE_W3_3,BLUE_W3_4,
    BLUE_W3_5,BLUE_W3_6,BLUE_W3_7,BLUE_W3_8,

    BLUE_W4_1,BLUE_W4_2,BLUE_W4_3,BLUE_W4_4,
    BLUE_W4_5,BLUE_W4_6,BLUE_W4_7,BLUE_W4_8,

    BLUE_PAIN_1,BLUE_DIE_1,BLUE_DIE_2,BLUE_DIE_3,
    BLUE_PAIN_2,BLUE_DEAD,

    BLUE_SHOOT1,BLUE_SHOOT2,BLUE_SHOOT3,

    ROTTEN_S_1,ROTTEN_S_2,ROTTEN_S_3,ROTTEN_S_4,
    ROTTEN_S_5,ROTTEN_S_6,ROTTEN_S_7,ROTTEN_S_8,

    ROTTEN_W1_1,ROTTEN_W1_2,ROTTEN_W1_3,ROTTEN_W1_4,
    ROTTEN_W1_5,ROTTEN_W1_6,ROTTEN_W1_7,ROTTEN_W1_8,

    ROTTEN_W2_1,ROTTEN_W2_2,ROTTEN_W2_3,ROTTEN_W2_4,
    ROTTEN_W2_5,ROTTEN_W2_6,ROTTEN_W2_7,ROTTEN_W2_8,

    ROTTEN_W3_1,ROTTEN_W3_2,ROTTEN_W3_3,ROTTEN_W3_4,
    ROTTEN_W3_5,ROTTEN_W3_6,ROTTEN_W3_7,ROTTEN_W3_8,

    ROTTEN_W4_1,ROTTEN_W4_2,ROTTEN_W4_3,ROTTEN_W4_4,
    ROTTEN_W4_5,ROTTEN_W4_6,ROTTEN_W4_7,ROTTEN_W4_8,

    ROTTEN_PAIN_1,ROTTEN_DIE_1,ROTTEN_DIE_2,ROTTEN_DIE_3,
    ROTTEN_PAIN_2,ROTTEN_DIE_4,ROTTEN_DEAD,

    ROTTEN_SHOOT1,ROTTEN_SHOOT2,ROTTEN_SHOOT3,ROTTEN_SHOOT4,

    WHITE_S_1,WHITE_S_2,WHITE_S_3,WHITE_S_4,
    WHITE_S_5,WHITE_S_6,WHITE_S_7,WHITE_S_8,

    WHITE_W1_1,WHITE_W1_2,WHITE_W1_3,WHITE_W1_4,
    WHITE_W1_5,WHITE_W1_6,WHITE_W1_7,WHITE_W1_8,

    WHITE_W2_1,WHITE_W2_2,WHITE_W2_3,WHITE_W2_4,
    WHITE_W2_5,WHITE_W2_6,WHITE_W2_7,WHITE_W2_8,

    WHITE_W3_1,WHITE_W3_2,WHITE_W3_3,WHITE_W3_4,
    WHITE_W3_5,WHITE_W3_6,WHITE_W3_7,WHITE_W3_8,

    WHITE_W4_1,WHITE_W4_2,WHITE_W4_3,WHITE_W4_4,
    WHITE_W4_5,WHITE_W4_6,WHITE_W4_7,WHITE_W4_8,

    WHITE_PAIN_1,WHITE_DIE_1,WHITE_DIE_2,WHITE_DIE_3,
    WHITE_PAIN_2,WHITE_DIE_4,WHITE_DEAD,

    WHITE_SHOOT1,WHITE_SHOOT2,WHITE_SHOOT3,

    BLINKY_W1,BLINKY_W2,PINKY_W1,PINKY_W2,
    CLYDE_W1,CLYDE_W2,INKY_W1,INKY_W2,
    
    BOSS_W1,BOSS_W2,BOSS_W3,BOSS_W4,
    BOSS_SHOOT1,BOSS_SHOOT2,BOSS_SHOOT3,BOSS_DEAD,
    BOSS_DIE1,BOSS_DIE2,BOSS_DIE3,
    
    GOOD_DR_W1,GOOD_DR_W2,GOOD_DR_W3,GOOD_DR_W4,
    GOOD_DR_SHOOT1,GOOD_DR_SHOOT2,
    GOOD_DR_DIE1,GOOD_DR_DIE2,GOOD_DR_DIE3,GOOD_DR_DEAD,
    PARTY_O1,PARTY_O2,PARTY_O3,PARTY_O4,
    
    ALP_W1,ALP_W2,ALP_W3,ALP_W4,
    ALP_SHOOT,ALP_FIRE1,ALP_FIRE2,
    ALP_DIE1,ALP_DIE2,ALP_DIE3,ALP_DIE4,
    ALP_DIE5,ALP_DEAD,
    
    MECHA_W1,MECHA_W2,MECHA_W3,MECHA_W4,
    MECHA_SHOOT1,MECHA_SHOOT2,MECHA_SHOOT3,MECHA_DEAD,
    MECHA_DIE1,MECHA_DIE2,MECHA_DIE3,
    
    GROFAZ_W1,GROFAZ_W2,GROFAZ_W3,GROFAZ_W4,
    GROFAZ_SHOOT1,GROFAZ_SHOOT2,GROFAZ_SHOOT3,GROFAZ_DEAD,
    GROFAZ_DIE1,GROFAZ_DIE2,GROFAZ_DIE3,GROFAZ_DIE4,
    GROFAZ_DIE5,GROFAZ_DIE6,GROFAZ_DIE7,
    
    HERMANN_W1,HERMANN_W2,HERMANN_W3,HERMANN_W4,
    HERMANN_SHOOT1,HERMANN_SHOOT2,
    HERMANN_DIE1,HERMANN_DIE2,HERMANN_DIE3,HERMANN_DEAD,
    
    ROCKET_1,ROCKET_2,ROCKET_3,ROCKET_4,
    ROCKET_5,ROCKET_6,ROCKET_7,ROCKET_8,
    
    SMOKE_1,SMOKE_2,SMOKE_3,SMOKE_4,
    BOOM_1,BOOM_2,BOOM_3,

    GRETEL_W1,GRETEL_W2,GRETEL_W3,GRETEL_W4,
    GRETEL_SHOOT1,GRETEL_SHOOT2,GRETEL_SHOOT3,GRETEL_DEAD,
    GRETEL_DIE1,GRETEL_DIE2,GRETEL_DIE3,
   
    FETTGEISCHT_W1,FETTGEISCHT_W2,FETTGEISCHT_W3,FETTGEISCHT_W4,
    FETTGEISCHT_SHOOT1,FETTGEISCHT_SHOOT2,FETTGEISCHT_SHOOT3,FETTGEISCHT_SHOOT4,
    FETTGEISCHT_DIE1,FETTGEISCHT_DIE2,FETTGEISCHT_DIE3,FETTGEISCHT_DEAD,
   
    SELF1_W1,SELF_W2,SELF_W3,SELF_W4,
    SELF_JUMP1,SELF_JUMP2,SELF_JUMP3,SELF_JUMP4,
   
    SPR_KNIFEREADY,SPR_KNIFEATK1,SPR_KNIFEATK2,SPR_KNIFEATK3,
    SPR_KNIFEATK4,
   
    SPR_PISTOLREADY,SPR_PISTOLATK1,SPR_PISTOLATK2,SPR_PISTOLATK3,
    SPR_PISTOLATK4,
   
    SPR_MACHINEGUNREADY,SPR_MACHINEGUNATK1,SPR_MACHINEGUNATK2,SPR_MACHINEGUNATK3,
    SPR_MACHINEGUNATK4,
   
    SPR_CHAINREADY,SPR_CHAINATK1,SPR_CHAINATK2,SPR_CHAINATK3,
    SPR_CHAINATK4

}
enum Snd {
    HALTSTOP,
    WOOF,
    DOOR_CLOSE,
    DOOR_OPEN,
    SHOT_MG,
    SHOT_PISTOL,
    SHOT_CHAIN,
    GREET_BLUE,
    UTT_GUTENTAG,
    UTT_MUTTI,
    SHOT_BOSS,
    SHOT_BLUE,
    SCREAM_AAGH,
    SCREAM_AYYY,
    PLAYER_DAMAGE,
    SECRET,
    YIFF,
    SCREAM_ROTTEN_AAAH,
    UTT_SCHWEINHUND,
    UTT_EVAAUFWIEDERSEHN,
    SCREAM_MEINLEBEN,
    SHOT_BROWN,
    GIBB,
    UTT_RAPUNZ,
    UTT_MEINGOTTIMHIMMEL,
    LAUGH_HUHUHAHA,
    LAUGH_ALP,
    UTT_SPION,
    SCREAM_NEINSOWAS,
    WAU_WAU,
    BREAKING,
    MECHA_STEP,
    YEAH,
    UTT_SCHEISS,
    SCREAM_AIIII,
    SCREAM_OOHHH,
    UTT_DONNERWETTER,
    UTT_KLEINEAMERIKANER,
    UTT_ERLAUBENSIEBITTE,
    FART,
    SCREAM_CHHHA,
    SCREAM_HUUGH,
    SCREAM_UWWWGH,
    UTT_KEINDEUTSCHKANN,
    UTT_MEINFUSSE,
    UTT_ROSENOSPE
}
